REPORT ON
SELF BALANCING BOT
-	By Sourabh Khemka (Under guidance of Rishabh Singh (Robolution, BIT Mesra))

Objective:    To make a self-balancing bot with forward and backward movement using MPU-6050.

Hardware components:
•	ARDUINO MEGA 2560
•	MPU-6050
•	L298N MOTOR DRIVER
•	HC-05 BLUETOOTH MODULE
•	WHEELS  

Software used:
•	Arduino IDE


Code for the self-balancing bot uses data from MPU-6050 sensor and calculates the PID output. 

Angle of the bot wrt to the vertical is used to calculate the value for (P+I+D). Values returned by both gyro as well as accelerometer
are combined using ‘Complimentary Filter’ to return the angle which the bot makes with the vertical i-e theta.

The I2C communication with MPU-6050 is established using Wire.h library.

Offset for the gyro value is calculated using 2000 data and the sensitivity is set to +/  500dps. The sensitivity of accelerometer is 
set to +/- 2.5g

Initially the values for Kp, Ki, Kd is set to zero and when the bot is aligned such that angle wrt vertical(theta) is less than 1 the
values for these parameters are set and the bot starts to balance itself. Here, also, the angle calculated using accelerometer is stored 
in the variable “gyro” and there after the angular velocity of bot is used to calculate theta using gyro (then combined using 
complimentary filter). The execution time of loop is fixed to 4ms which helps in calculating change in theta using angular velocity.

After calculating the value of O = (P+I+D) corresponding to theta the PWM for the motors is calculated using O and is mapped from 
motor minimum to 255. Motor minimum is the maximum value of PWM for which the rpm = 0. Mapping reduces the jerk while balancing and
makes the bot more stable. 


For the motion of bot in forward and backward direction a concept based on Pulse Width Modulation is applied.

When the command corresponding to forward movement is given, the wheels are given a certain PWM in that direction every ‘n’ loop cycles.
This is similar to PWM, here the forward rotation of wheels is the signal given in every ‘n’ cycles (of void loop ()). The bot is balanced
in between the time when motors are rotated forward. This rotating of bot and then again balancing it moves the bot forward, ‘n’ is 
similar to the duty cycle, higher the duty cycle greater will be the effect of actuator (i-e faster forward rotation of the bot). 

Value for n is like, n=3(more frequent) for smaller inclination angles & n=5(less frequent) for larger inclination.

The frequency (of forward rotation of wheels) is reduced for larger values of theta to prevent the bot from falling down and to get
more time to balance it at larger angles with vertical.

Similarly, the backward movement is also achieved.


The commands for forward and backward  is given by Bluetooth communication (using HC-05) 



WORKS UNDER PROGRESS:
Value of PWM and ‘n’ for the forward and backward rotation is being tuned in order to achieve proper movement
GITHUB LINK FOR THE CODE: https://github.com/sourabhkhemka/Self-Balancing-Bot
LINK FOR DEMONSTRATION VIDEO: 
